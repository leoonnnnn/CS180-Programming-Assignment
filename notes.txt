do 1 version using max fxn so literally just hw 1 prob 2. then one with or, so combine hw 1 prob 2 with exam q. so basically just adding a few if statements lol


ok so did with a max fxn, so now do it with damage tiles too, first just pass tile types and check the exising code by just adding health tile type/checking for it, thennn add damage tiles



actually dont even need to change from max to or b/c if the max is >= 0 then its possible, if not, then yeah false. also don't need to terminate it early when health drops below -1 UNLESS spec says when your health drops below zero you auto-lose. well matt said in a piazza post that you cant revive, so guess you cant drop below 0 and then come back up again, so need to add that logic in rn first. (even then can still have max and dont need to change to or, basically if you drop below 0 either penalize it or just "end" it. can penalize by checking if H < 0: return -100000)

make a test case where you auto die immediately off the first 2 squares (down or right is big negative), but then possible to end with positive score. then make a test case where H starts as negative (idk weird edge case) <-- but it should return false regardless. tho test with starting hp of -1 and then first two tiles (down and right) are +2. if need extra line of code to check if H < 0 or n <= 0, then add that in the wrapper NOT the helper fxn.


rename the local variable "multiplier" to "type" to avoid confusion

max function would help with using tokens, tho or should get the same result, cuz itll go thru eveyr possibiliy (right?), so what am i waffling about :skull:


random edgecase, but my code supports negative values (ie health tile with negative value, essentially a damage tile), so bascially if you forget to change the type instead on a testcase (forget u can even change types lol)


on the last tile, dont have to add value to hp or do any checks cuz if u die on the last tile, the final return value will be negative anyways, the other negative check is just to see if u died before the end (and somehow gain back enough health)


also type will remain as 0 for tile_type 2 and 3 (aka the tokens) so dont need to change any code

commit 49eeaea: ok so added prot token and it works, butttt no "choice" yet, it uses it immediately on the first square. So add that next.

hmm ok maybe not best solution, but u only need the token if the damage will kill you, so save it till then, but there are cases where you'd take consecutive damage, where using it earlier would help



commit d246ac9: It doesnt use tokens unless the damage will kill you, butttt doesnt account for consecutive damage. Maybe current tile won't kill you, but it'll drop you low enough that next one will.

Case A (test_13)
hp: 10
tile 1: prot token
tile 2: -8
tile 3: -4
tile 4: -4
fails this one, but should pass

Case B (test_14)
hp: 10
tile 1: prot token
tile 2: -8
tile 3: prot token
tile 4: -4
tile 5: -4
fails this one, but should pass
same thing but with extra prot token, basically it should use the first one cuz will get another.
So that means we should go thru every possibility, which is not what my code is doing.
What it should do is if got a token, then use or not use on next damage tile (literally do every combo)

starting hp = 10
prot -5 -8 -4 prot +3 -1 -2 -9    this is survivable (make this test_15)
Case c (test_15)
hp: 10
tile 1: prot token
tile 2: -5
tile 3: -8
tile 4: -4
tile 5: prot token
tile 6: +3
tile 7: -1
tile 8: -2
tile 9: -9
fails this one, but should pass